# 自动修复问题
fix = true

# 允许的最大行长度
indent-width = 4
line-length = 88

# 选择兼容的 Python 版本
target-version = "py312"

# 排除检查的目录
exclude = [
    "__pycache__",
    ".git",
    ".mypy_cache",
    ".tox",
    ".venv",
    "build",
    "dist",
]

# 禁用某些规则
ignore = ["E501"] # 忽略行长度超过限制的错误

# 启用的规则集合
select = ["E", "F", "W", "C90", "I"]


[format]
# 启用格式化功能
docstring-code-format = true
indent-style = "space"
# Use `\n` line endings for all files
line-ending = "lf"
quote-style = "double"


[lint.isort]
force-wrap-aliases = true
combine-as-imports = true
length-sort = true
lines-after-imports = 2

known-first-party = [
    # 项目核心模块
    "core", # 核心功能模块
    "utils", # 通用工具模块
    "config", # 配置管理模块

    # 数据处理模块
    "data", # 数据加载和预处理模块
    "features", # 特征工程模块

    # 模型相关模块
    "models", # 模型定义和训练模块
    "evaluation", # 模型评估模块

    # API和服务模块
    "api", # 提供API服务的模块
    "services", # 后端服务逻辑模块

    # 测试和开发工具
    "tests", # 测试代码模块
    "devtools", # 开发工具模块
]

known-third-party = [
    # 数值计算和数据处理
    "numpy", # 数值计算库，支持多维数组和矩阵运算
    "pandas", # 数据处理和分析库，提供数据结构和操作工具
    "scipy", # 科学计算库，提供高级数学函数
    "polars", # 高性能数据框架，类似于pandas
    "dask", # 并行计算库，支持大规模数据处理

    # 数据可视化
    "matplotlib", # 数据可视化库，支持生成各种图表
    "seaborn", # 基于matplotlib的高级数据可视化库
    "plotly", # 交互式数据可视化库
    "dash", # 基于Plotly的Web应用框架

    # 机器学习和深度学习
    "sklearn", # 机器学习库，提供各种算法和工具
    "tensorflow", # 深度学习框架，支持大规模机器学习
    "torch", # 深度学习框架，支持动态计算图
    "pytorch_lightning", # PyTorch的高级封装，简化训练流程
    "xgboost", # 提升树算法库，用于回归和分类
    "lightgbm", # 高效的梯度提升框架
    "catboost", # 用于分类和回归的梯度提升库
    "keras", # 高级神经网络API，基于TensorFlow
    "imblearn", # 处理数据不平衡的机器学习库
    "shap", # 模型解释工具，基于SHAP值
    "lime", # 模型解释工具，基于局部解释
    "optuna", # 超参数优化框架
    "hyperopt", # 分布式超参数优化库
    "mlflow", # 机器学习生命周期管理工具

    # 自然语言处理
    "nltk", # 自然语言处理库
    "spacy", # 高效的自然语言处理库
    "gensim", # 主题建模和文档相似性分析库
    "transformers", # 自然语言处理的预训练模型库
    "huggingface", # 提供预训练模型和工具的生态系统

    # Web开发
    "flask", # 轻量级Web框架，用于构建Web应用
    "django", # 全功能Web框架，支持快速开发和部署
    "fastapi", # 高性能Web框架，支持异步编程

    # 数据存储和处理
    "pyarrow", # 高效的列式数据处理库
    "openpyxl", # Excel文件读写库

    # 工具和其他
    "requests", # HTTP请求库，用于与网络交互
    "jupyter", # 交互式计算环境
    "notebook", # Jupyter的笔记本界面
    "pydantic", # 数据验证和设置管理库
    "joblib", # 并行计算和缓存库
]
